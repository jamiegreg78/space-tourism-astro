<script>
	let activeTab: string | null =
		(document.querySelector(".tab[data-tab-active='true']") as HTMLElement)
			.dataset.tab || null;

	function showContent() {
		if (activeTab !== null) {
			const tabs = document.querySelectorAll("[data-tab-content]");

			for (let i = 0; i < tabs.length; i++) {
				const tab = tabs[i] as HTMLElement;
				if (tab.dataset.tabContent === activeTab) {
					tab.setAttribute("data-tab-content-active", "true");
				} else {
					tab.removeAttribute("data-tab-content-active");
				}
			}
		}
	}

	function selectTab(tab: HTMLElement) {
		if (tab.dataset.tab !== undefined) {
			activeTab = tab.dataset.tab;
			showContent();

			const tabs = document.querySelectorAll("[data-tab]");

			for (let i = 0; i < tabs.length; i++) {
				const tab = tabs[i] as HTMLElement;
				if (tab.dataset.tab === activeTab) {
					tab.setAttribute("data-tab-active", "true");
				} else {
					tab.removeAttribute("data-tab-active");
				}
			}
		}
	}

	function addEventListeners() {
		const tabs = document.querySelectorAll("[data-tab]");

		for (let i = 0; i < tabs.length; i++) {
			const tab = tabs[i] as HTMLElement;
			tab.addEventListener("click", () => selectTab(tab));
		}
	}

	addEventListeners();
	showContent();
</script>

<div class="tab-selectors">
	<span
		aria-label="Show Moon Tab"
		class="tab nav-text"
		data-tab="moon"
		data-tab-active="true">Moon</span
	>
	<span aria-label="Show Mars Tab" class="tab nav-text" data-tab="mars"
		>Mars</span
	>
	<span aria-label="Show Europa Tab" class="tab nav-text" data-tab="europa"
		>Europa</span
	>
	<span aria-label="Show Titan Tab" class="tab nav-text" data-tab="titan"
		>Titan</span
	>
</div>

<style lang="scss">
	.tab-selectors {
		width: 100%;
		display: flex;
		justify-content: center;
		gap: 2rem;

		span {
			display: inline-block;

			text-transform: uppercase;
			color: var(--text-secondary);

			&[data-tab-active="true"] {
				color: var(--text-primary);

				&::after {
					content: "";
					display: block;
					width: 100%;
					height: 2px;
					background-color: var(--text-primary);
					margin-top: 0.5rem;
				}
			}

			&:hover::after {
				content: "";
				display: block;
				width: 100%;
				height: 2px;
				background-color: var(--text-primary);
				opacity: 0.5;
				margin-top: 0.5rem;
			}

			&:hover {
				cursor: pointer;
			}
		}

		@media only screen and (min-width: 1100px) {
			justify-content: start;
		}
	}
</style>
